using System;
using System.Collections;
using System.Collections.Generic;
using StrawberryShake;

namespace StarWarsClientDemo
{
    public class Queries
        : IDocument
    {
        private readonly byte[] _hashName = new byte[]
        {
            109,
            100,
            53,
            72,
            97,
            115,
            104
        };
        private readonly byte[] _hash = new byte[]
        {
            117,
            122,
            69,
            65,
            112,
            57,
            47,
            111,
            77,
            120,
            107,
            56,
            85,
            114,
            86,
            52,
            53,
            107,
            120,
            120,
            68,
            65,
            61,
            61
        };
        private readonly byte[] _content = new byte[]
        {
            113,
            117,
            101,
            114,
            121,
            32,
            71,
            101,
            116,
            72,
            101,
            114,
            111,
            40,
            36,
            101,
            112,
            105,
            115,
            111,
            100,
            101,
            58,
            32,
            69,
            112,
            105,
            115,
            111,
            100,
            101,
            32,
            61,
            32,
            78,
            69,
            87,
            72,
            79,
            80,
            69,
            41,
            32,
            123,
            32,
            95,
            95,
            116,
            121,
            112,
            101,
            110,
            97,
            109,
            101,
            32,
            104,
            101,
            114,
            111,
            40,
            101,
            112,
            105,
            115,
            111,
            100,
            101,
            58,
            32,
            36,
            101,
            112,
            105,
            115,
            111,
            100,
            101,
            41,
            32,
            123,
            32,
            95,
            95,
            116,
            121,
            112,
            101,
            110,
            97,
            109,
            101,
            32,
            46,
            46,
            46,
            32,
            72,
            97,
            115,
            78,
            97,
            109,
            101,
            32,
            46,
            46,
            46,
            32,
            72,
            97,
            115,
            70,
            114,
            105,
            101,
            110,
            100,
            115,
            32,
            125,
            32,
            125,
            32,
            102,
            114,
            97,
            103,
            109,
            101,
            110,
            116,
            32,
            72,
            97,
            115,
            78,
            97,
            109,
            101,
            32,
            111,
            110,
            32,
            67,
            104,
            97,
            114,
            97,
            99,
            116,
            101,
            114,
            32,
            123,
            32,
            95,
            95,
            116,
            121,
            112,
            101,
            110,
            97,
            109,
            101,
            32,
            110,
            97,
            109,
            101,
            32,
            125,
            32,
            102,
            114,
            97,
            103,
            109,
            101,
            110,
            116,
            32,
            72,
            97,
            115,
            70,
            114,
            105,
            101,
            110,
            100,
            115,
            32,
            111,
            110,
            32,
            67,
            104,
            97,
            114,
            97,
            99,
            116,
            101,
            114,
            32,
            123,
            32,
            95,
            95,
            116,
            121,
            112,
            101,
            110,
            97,
            109,
            101,
            32,
            102,
            114,
            105,
            101,
            110,
            100,
            115,
            32,
            123,
            32,
            95,
            95,
            116,
            121,
            112,
            101,
            110,
            97,
            109,
            101,
            32,
            110,
            111,
            100,
            101,
            115,
            32,
            123,
            32,
            95,
            95,
            116,
            121,
            112,
            101,
            110,
            97,
            109,
            101,
            32,
            46,
            46,
            46,
            32,
            72,
            97,
            115,
            78,
            97,
            109,
            101,
            32,
            125,
            32,
            125,
            32,
            125
        };

        public ReadOnlySpan<byte> HashName => _hashName;

        public ReadOnlySpan<byte> Hash => _hash;

        public ReadOnlySpan<byte> Content => _content;

        public static Queries Default { get; } = new Queries();

        public override string ToString() => 
            @"query GetHero($episode: Episode = NEWHOPE) {
              hero(episode: $episode) {
                ... HasName
                ... HasFriends
              }
            }
            
            fragment HasName on Character {
              name
            }
            
            fragment HasFriends on Character {
              friends {
                nodes {
                  ... HasName
                }
              }
            }";
    }
}
